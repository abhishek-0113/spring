if(repo.findByEmail(email)!=null) {
			if(repo.findByEmail(email).getPassword().equals(password)) {
				
				//Discovery client
//				List<ServiceInstance> instances = dc.getInstances(ts);
//				System.out.println(instances.size());
//				URI uri =instances.get(0).getUri();
				
				//LoadBalancerClient
				ServiceInstance instance = loadBalancerClient.choose(ts);
				URI uri = URI.create(String.format("http://%s:%s", instance.getHost(),instance.getPort()));
				
				System.out.println("User-Service.loginUser.URI======"+ uri);;
				String url = uri + "/Trade.html";
				System.out.println("====================================");
				System.out.println("User-Service.loginUser.URI======"+ uri);
				
				try {
					response.sendRedirect(url);
				}catch(Exception e){
					System.out.println("Error in dispatching");
				}
				return "error";
			}
			else {
				return "PasswordError"; //Logical view name
			}
		}
		else {
			return "Sorry";
		}
	}


@RequestMapping(value="/todos/all",method=RequestMethod.GET,produces="application/json")
	@ResponseBody
	public String displayTodos() {
		CircuitBreaker cb = cbFactory.create("ToDoCircuitBreaker");
		String url = "http://jsonplaceholder.typicode.com/todos";
		return cb.run(()->restTemplate.getForObject(url, String.class), throwable->defaultTodos());
	}
	
	//fallback method
	public String defaultTodos() {
		return "{'uesrId':1,'id':1,'title':'log message','completed':false}";
	}
