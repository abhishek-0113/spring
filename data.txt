import java.io.*;
import java.math.*;
import java.security.*;
import java.text.*;
import java.util.*;
import java.util.concurrent.*;
import java.util.function.*;
import java.util.regex.*;
import java.util.stream.*;
import static java.util.stream.Collectors.joining;
import static java.util.stream.Collectors.toList;
import java.net.*;
import org.json.simple.*;
import org.json.simple.parser.*;
import java.net.http.*;
import java.net.URI;
import org.json.simple.parser.JSONParser;
import org.json.simple.parser.ParseException;
import com.google.gson.*;

class Result {

    /*
     * Complete the 'getRecordDiagnosed' function below.
     *
     * The function is expected to return an INTEGER_ARRAY.
     * The function accepts following parameters:
     *  1. INTEGER doctorId
     *  2. INTEGER breathingRate
     *  3. INTEGER diagnosisId
     *
     *  https://jsonmock.hackerrank.com/api/medical_records
     */

    public static List<Integer> getRecordDiagnosed(int doctorId, int breathingRate, int diagnosisId) {

    }

}

public class Solution {
    public static void main(String[] args) throws IOException {
        BufferedReader bufferedReader = new BufferedReader(new InputStreamReader(System.in));
        BufferedWriter bufferedWriter = new BufferedWriter(new FileWriter(System.getenv("OUTPUT_PATH")));

        int doctorId = Integer.parseInt(bufferedReader.readLine().trim());

        int breathingRate = Integer.parseInt(bufferedReader.readLine().trim());

        int diagnosisId = Integer.parseInt(bufferedReader.readLine().trim());

        List<Integer> result = Result.getRecordDiagnosed(doctorId, breathingRate, diagnosisId);

        bufferedWriter.write(
            result.stream()
                .map(Object::toString)
                .collect(joining("\n"))
            + "\n"
        );

        bufferedReader.close();
        bufferedWriter.close();
    }
}
